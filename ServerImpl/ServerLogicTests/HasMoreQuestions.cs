using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Server;
using Entities;
using Constants;
using System.Collections.Generic;

namespace ServerLogicTests
{
    [TestClass]
    public class HasMoreQuestions
    {
        private IServer _server;

        [TestInitialize]
        public void TestInitialize()
        {
            _server = new ServerImpl(new FakeMedTrainDBContext());
            _server.login("defaultadmin@gmail.com", "password");
            _server.addSubject(Users.USER_UNIQUE_INT, "subject");
            _server.addTopic(Users.USER_UNIQUE_INT, "subject", "topic");
            _server.addQuestion(Users.USER_UNIQUE_INT, "subject", false, "", new List<string>() { "topic" });
            _server.getAutoGeneratedQuesstion(Users.USER_UNIQUE_INT, "subject", "topic");
        }

        [TestMethod]
        public void hasMoreQuestionsTrue()
        {
            Assert.IsTrue(_server.hasMoreQuestions(Users.USER_UNIQUE_INT));
        }

        [TestMethod]
        public void hasMoreQuestionsFalse()
        {
            _server.hasMoreQuestions(Users.USER_UNIQUE_INT);
            Question q = _server.getNextQuestion(Users.USER_UNIQUE_INT).Item2;
            _server.answerAQuestion(Users.USER_UNIQUE_INT, q.QuestionId, true, 7, new List<string>(), new List<int>());
            Assert.IsFalse(_server.hasMoreQuestions(Users.USER_UNIQUE_INT));
        }

        [TestMethod]
        public void hasMoreQuestionsUserNotLoggedIn()
        {
            _server.logout(Users.USER_UNIQUE_INT);
            Assert.IsFalse(_server.hasMoreQuestions(Users.USER_UNIQUE_INT));
        }

        [TestMethod]
        public void hasMoreQuestionsWrongUserId()
        {
            Assert.IsFalse(_server.hasMoreQuestions(Users.USER_UNIQUE_INT - 1));
        }
    }
}
