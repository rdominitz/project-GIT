using communication.Core;
using communication.Models.GetTest;
using Constants;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace communication.Controllers
{
    public class GetTestController : Controller
    {
        [HttpGet]
        // GET: GetTest
     /*   public ActionResult Index()
        {
            
            return View(getData());
        }*/

        public ActionResult Index(string message)
        {
            ViewBag.message = message;
            return View(getData());
        }

        List<GetTestData> getData()
        {
            List<GetTestData> data = new List<GetTestData>();
            List<string> subjects = ServerWiring.getInstance().getAllSubjects();
            foreach (string subject in subjects)
            {
                List<string> list = ServerWiring.getInstance().getSubjectTopics(subject);
                list.Remove(Constants.Topics.NORMAL);
                data.Add(new GetTestData(subject, list));
            }
            return data;
        }

        [HttpGet]
        public List<string> SubjectChanged(string subject)
        {
            return ServerWiring.getInstance().getSubjectTopics(subject);

        }

        [HttpPost]
        public ActionResult Submit(string subject, string topic, int numberOfQuestions, string whenToShowAnswer)
        {

            HttpCookie cookie = Request.Cookies["userId"];
            ViewBag.subject = subject;
            ViewBag.topic = topic;
            ViewBag.numberOfQuestions = numberOfQuestions;
            bool flag = false;
            if (whenToShowAnswer.Equals("AfterEachQuestion"))
            {
                flag = true;
            }
            string ans = ServerWiring.getInstance().getAutoGeneratedTest(Convert.ToInt32(cookie.Value), subject, topic, numberOfQuestions, flag);
            if (ans == Replies.SUCCESS)
            {
                return RedirectToAction("Index", "AnswerQuestion");
            }
            

            return RedirectToAction("Index","GetTest", new { message = ans });
        }
    }
}